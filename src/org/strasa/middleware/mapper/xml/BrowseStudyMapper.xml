<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BrowseStudy">

	<select id="getStudySearchResult" resultType="StudySearchResultModel"
		parameterType="StudySearchFilterModel">
		select
		distinct
		t1.shared as shared,
		t1.id as id,
		t1.programid as
		programid,
		t2.name as
		programname,
		t1.projectid as projectid,
		t3.name as
		projectname,
		t1.name
		as studyname,
		t1.studytypeid as studytypeid,
		t4.studytype as
		studytypename,
		t1.startyear as startyear,
		t1.endyear as
		endyear,
		t5.locationid as locationid,
		t6.locationname as locationname,
		t6.country as country
		from study as t1
		left join program as t2 on
		t1.programid=t2.id
		left join project as t3 on t1.projectid=t3.id
		left
		join studytype as t4 on t1.studytypeid=t4.id
		left join studylocation as
		t5 on t1.id=t5.studyid
		left join location as t6 on t5.locationid=t6.id

		<where>

			<if test="userid != 0">
				<if test="shared != null">
					AND (t1.shared=1 OR t1.userid=#{userid})
				</if>
				<if test="shared == null">
					AND (t1.userid=#{userid})
				</if>
			</if>
			<if test="userid == 0">
				AND (t1.shared=1)
			</if>

			<if test="studyname != null">
				AND t1.name LIKE #{studyname}
			</if>

			<if test="studytypeid != 0">
				AND t1.studytypeid=#{studytypeid}
			</if>

			<if test="projectid != 0">
				AND t1.projectid=#{projectid}
			</if>

			<if test="programid != 0">
				AND t1.programid=#{programid}
			</if>

			<if test="startyear != null">
				AND t1.startyear=#{startyear}
			</if>

			<if test="endyear != null">
				AND t1.endyear=#{endyear}
			</if>

			<if test="locationid != 0">
				AND t5.locationid=#{locationid}
			</if>

			<if test="country != null">
				AND t6.country=#{country}
			</if>

		</where>

	</select>



	<select id="getStudyRawData" resultType="hashmap" parameterType="StudyDataColumnModel">
		select
		<foreach item="item" index="index" collection="list">
			<if test="item.order != item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader},
			</if>

			<if test="item.order == item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader}
				from studyrawdata as
				t1 where t1.studyid=#{item.studyid} and t1.dataset=#{item.dataset}
				group by t1.datarow
			</if>

		</foreach>
	</select>

	<select id="getStudyDerivedData" resultType="hashmap"
		parameterType="StudyDataColumnModel">
		select
		<foreach item="item" index="index" collection="list">
			<if test="item.order != item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader},
			</if>

			<if test="item.order == item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader}
				from studyderiveddata
				as
				t1 where t1.studyid=#{item.studyid} and t1.dataset=#{item.dataset}
				group by t1.datarow
			</if>

		</foreach>
	</select>

	<select id="getStudyRawDataNoDataset" resultType="hashmap"
		parameterType="StudyDataColumnModel">
		select
		<foreach item="item" index="index" collection="list">
			<if test="item.order != item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader},
			</if>

			<if test="item.order == item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader}
				from studyrawdata as
				t1 where t1.studyid=#{item.studyid}
				group by t1.datarow
			</if>

		</foreach>
	</select>

	<select id="getStudyDerivedDataNoDataset" resultType="hashmap"
		parameterType="StudyDataColumnModel">
		select
		<foreach item="item" index="index" collection="list">
			<if test="item.order != item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader},
			</if>

			<if test="item.order == item.count">
				MAX(CASE datacolumn WHEN #{item.columnheader} THEN
				datavalue ELSE '' END) AS #{item.columnheader}
				from studyderiveddata
				as
				t1 where t1.studyid=#{item.studyid}
				group by t1.datarow
			</if>

		</foreach>
	</select>

	<select id="getStudyWithGemrplasmTested" resultType="StudySearchResultModel"
		parameterType="int">
		select distinct t1.studyid as id,
		t2.name as studyname,
		t3.name as programname,
		t4.name as projectname,
		t5.studytype as
		studytype,
		t2.startyear as startyear,
		t2.endyear as endyear,
		t8.locationname as locationname,
		t8.country as country
		from studyrawdata
		as t1
		left join study as t2 on t1.studyid=t2.id
		left join program as t3
		on t2.programid=t3.id
		left join project as t4 on t2.programid=t4.id
		left join studytype as t5 on t2.studytypeid=t5.id
		left join studysite
		as t6 on t1.studyid=t6.studyid
		left join studylocation as t7 on
		t1.studyid=t7.studyid
		left join location as t8 on t7.id=t8.id
		where
		t1.datacolumn='GName' and t1.datavalue=#{gname}
		union
		select distinct
		t1.studyid,t2.name as studyname,
		t3.name as programname,
		t4.name as
		projectname,
		t5.studytype as studytype,
		t2.startyear as startyear,
		t2.endyear as endyear,
		t8.locationname as locationname,
		t8.country as
		country
		from studyderiveddata as t1
		left join study as t2 on
		t1.studyid=t2.id
		left join program as t3 on t2.programid=t3.id
		left join
		project as t4 on t2.programid=t4.id
		left join studytype as t5 on
		t2.studytypeid=t5.id
		left join studysite as t6 on t1.studyid=t6.studyid
		left join studylocation as t7 on t1.studyid=t7.studyid
		left join
		location as t8 on t7.id=t8.id
		where t1.datacolumn='GName' and
		t1.datavalue=#{gname}
	</select>

</mapper>