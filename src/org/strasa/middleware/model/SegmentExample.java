package org.strasa.middleware.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class SegmentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public SegmentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andSegmentIdIsNull() {
			addCriterion("segment_id is null");
			return (Criteria) this;
		}

		public Criteria andSegmentIdIsNotNull() {
			addCriterion("segment_id is not null");
			return (Criteria) this;
		}

		public Criteria andSegmentIdEqualTo(Integer value) {
			addCriterion("segment_id =", value, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdNotEqualTo(Integer value) {
			addCriterion("segment_id <>", value, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdGreaterThan(Integer value) {
			addCriterion("segment_id >", value, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("segment_id >=", value, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdLessThan(Integer value) {
			addCriterion("segment_id <", value, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdLessThanOrEqualTo(Integer value) {
			addCriterion("segment_id <=", value, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdIn(List<Integer> values) {
			addCriterion("segment_id in", values, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdNotIn(List<Integer> values) {
			addCriterion("segment_id not in", values, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdBetween(Integer value1, Integer value2) {
			addCriterion("segment_id between", value1, value2, "segmentId");
			return (Criteria) this;
		}

		public Criteria andSegmentIdNotBetween(Integer value1, Integer value2) {
			addCriterion("segment_id not between", value1, value2, "segmentId");
			return (Criteria) this;
		}

		public Criteria andChromosomeIsNull() {
			addCriterion("chromosome is null");
			return (Criteria) this;
		}

		public Criteria andChromosomeIsNotNull() {
			addCriterion("chromosome is not null");
			return (Criteria) this;
		}

		public Criteria andChromosomeEqualTo(Integer value) {
			addCriterion("chromosome =", value, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeNotEqualTo(Integer value) {
			addCriterion("chromosome <>", value, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeGreaterThan(Integer value) {
			addCriterion("chromosome >", value, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeGreaterThanOrEqualTo(Integer value) {
			addCriterion("chromosome >=", value, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeLessThan(Integer value) {
			addCriterion("chromosome <", value, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeLessThanOrEqualTo(Integer value) {
			addCriterion("chromosome <=", value, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeIn(List<Integer> values) {
			addCriterion("chromosome in", values, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeNotIn(List<Integer> values) {
			addCriterion("chromosome not in", values, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeBetween(Integer value1, Integer value2) {
			addCriterion("chromosome between", value1, value2, "chromosome");
			return (Criteria) this;
		}

		public Criteria andChromosomeNotBetween(Integer value1, Integer value2) {
			addCriterion("chromosome not between", value1, value2, "chromosome");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentIsNull() {
			addCriterion("recurrent_parent is null");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentIsNotNull() {
			addCriterion("recurrent_parent is not null");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentEqualTo(String value) {
			addCriterion("recurrent_parent =", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentNotEqualTo(String value) {
			addCriterion("recurrent_parent <>", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentGreaterThan(String value) {
			addCriterion("recurrent_parent >", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentGreaterThanOrEqualTo(String value) {
			addCriterion("recurrent_parent >=", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentLessThan(String value) {
			addCriterion("recurrent_parent <", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentLessThanOrEqualTo(String value) {
			addCriterion("recurrent_parent <=", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentLike(String value) {
			addCriterion("recurrent_parent like", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentNotLike(String value) {
			addCriterion("recurrent_parent not like", value, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentIn(List<String> values) {
			addCriterion("recurrent_parent in", values, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentNotIn(List<String> values) {
			addCriterion("recurrent_parent not in", values, "recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentBetween(String value1, String value2) {
			addCriterion("recurrent_parent between", value1, value2,
					"recurrentParent");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentNotBetween(String value1,
				String value2) {
			addCriterion("recurrent_parent not between", value1, value2,
					"recurrentParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentIsNull() {
			addCriterion("donor_parent is null");
			return (Criteria) this;
		}

		public Criteria andDonorParentIsNotNull() {
			addCriterion("donor_parent is not null");
			return (Criteria) this;
		}

		public Criteria andDonorParentEqualTo(String value) {
			addCriterion("donor_parent =", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentNotEqualTo(String value) {
			addCriterion("donor_parent <>", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentGreaterThan(String value) {
			addCriterion("donor_parent >", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentGreaterThanOrEqualTo(String value) {
			addCriterion("donor_parent >=", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentLessThan(String value) {
			addCriterion("donor_parent <", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentLessThanOrEqualTo(String value) {
			addCriterion("donor_parent <=", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentLike(String value) {
			addCriterion("donor_parent like", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentNotLike(String value) {
			addCriterion("donor_parent not like", value, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentIn(List<String> values) {
			addCriterion("donor_parent in", values, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentNotIn(List<String> values) {
			addCriterion("donor_parent not in", values, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentBetween(String value1, String value2) {
			addCriterion("donor_parent between", value1, value2, "donorParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentNotBetween(String value1, String value2) {
			addCriterion("donor_parent not between", value1, value2,
					"donorParent");
			return (Criteria) this;
		}

		public Criteria andPosition1IsNull() {
			addCriterion("position_1 is null");
			return (Criteria) this;
		}

		public Criteria andPosition1IsNotNull() {
			addCriterion("position_1 is not null");
			return (Criteria) this;
		}

		public Criteria andPosition1EqualTo(BigDecimal value) {
			addCriterion("position_1 =", value, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1NotEqualTo(BigDecimal value) {
			addCriterion("position_1 <>", value, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1GreaterThan(BigDecimal value) {
			addCriterion("position_1 >", value, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("position_1 >=", value, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1LessThan(BigDecimal value) {
			addCriterion("position_1 <", value, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1LessThanOrEqualTo(BigDecimal value) {
			addCriterion("position_1 <=", value, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1In(List<BigDecimal> values) {
			addCriterion("position_1 in", values, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1NotIn(List<BigDecimal> values) {
			addCriterion("position_1 not in", values, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("position_1 between", value1, value2, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition1NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("position_1 not between", value1, value2, "position1");
			return (Criteria) this;
		}

		public Criteria andPosition2IsNull() {
			addCriterion("position_2 is null");
			return (Criteria) this;
		}

		public Criteria andPosition2IsNotNull() {
			addCriterion("position_2 is not null");
			return (Criteria) this;
		}

		public Criteria andPosition2EqualTo(BigDecimal value) {
			addCriterion("position_2 =", value, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2NotEqualTo(BigDecimal value) {
			addCriterion("position_2 <>", value, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2GreaterThan(BigDecimal value) {
			addCriterion("position_2 >", value, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("position_2 >=", value, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2LessThan(BigDecimal value) {
			addCriterion("position_2 <", value, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2LessThanOrEqualTo(BigDecimal value) {
			addCriterion("position_2 <=", value, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2In(List<BigDecimal> values) {
			addCriterion("position_2 in", values, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2NotIn(List<BigDecimal> values) {
			addCriterion("position_2 not in", values, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("position_2 between", value1, value2, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition2NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("position_2 not between", value1, value2, "position2");
			return (Criteria) this;
		}

		public Criteria andPosition3IsNull() {
			addCriterion("position_3 is null");
			return (Criteria) this;
		}

		public Criteria andPosition3IsNotNull() {
			addCriterion("position_3 is not null");
			return (Criteria) this;
		}

		public Criteria andPosition3EqualTo(BigDecimal value) {
			addCriterion("position_3 =", value, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3NotEqualTo(BigDecimal value) {
			addCriterion("position_3 <>", value, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3GreaterThan(BigDecimal value) {
			addCriterion("position_3 >", value, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("position_3 >=", value, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3LessThan(BigDecimal value) {
			addCriterion("position_3 <", value, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3LessThanOrEqualTo(BigDecimal value) {
			addCriterion("position_3 <=", value, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3In(List<BigDecimal> values) {
			addCriterion("position_3 in", values, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3NotIn(List<BigDecimal> values) {
			addCriterion("position_3 not in", values, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("position_3 between", value1, value2, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition3NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("position_3 not between", value1, value2, "position3");
			return (Criteria) this;
		}

		public Criteria andPosition4IsNull() {
			addCriterion("position_4 is null");
			return (Criteria) this;
		}

		public Criteria andPosition4IsNotNull() {
			addCriterion("position_4 is not null");
			return (Criteria) this;
		}

		public Criteria andPosition4EqualTo(BigDecimal value) {
			addCriterion("position_4 =", value, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4NotEqualTo(BigDecimal value) {
			addCriterion("position_4 <>", value, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4GreaterThan(BigDecimal value) {
			addCriterion("position_4 >", value, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("position_4 >=", value, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4LessThan(BigDecimal value) {
			addCriterion("position_4 <", value, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4LessThanOrEqualTo(BigDecimal value) {
			addCriterion("position_4 <=", value, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4In(List<BigDecimal> values) {
			addCriterion("position_4 in", values, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4NotIn(List<BigDecimal> values) {
			addCriterion("position_4 not in", values, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("position_4 between", value1, value2, "position4");
			return (Criteria) this;
		}

		public Criteria andPosition4NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("position_4 not between", value1, value2, "position4");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartIsNull() {
			addCriterion("physical_start is null");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartIsNotNull() {
			addCriterion("physical_start is not null");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartEqualTo(Integer value) {
			addCriterion("physical_start =", value, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartNotEqualTo(Integer value) {
			addCriterion("physical_start <>", value, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartGreaterThan(Integer value) {
			addCriterion("physical_start >", value, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartGreaterThanOrEqualTo(Integer value) {
			addCriterion("physical_start >=", value, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartLessThan(Integer value) {
			addCriterion("physical_start <", value, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartLessThanOrEqualTo(Integer value) {
			addCriterion("physical_start <=", value, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartIn(List<Integer> values) {
			addCriterion("physical_start in", values, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartNotIn(List<Integer> values) {
			addCriterion("physical_start not in", values, "physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartBetween(Integer value1, Integer value2) {
			addCriterion("physical_start between", value1, value2,
					"physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalStartNotBetween(Integer value1,
				Integer value2) {
			addCriterion("physical_start not between", value1, value2,
					"physicalStart");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndIsNull() {
			addCriterion("physical_end is null");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndIsNotNull() {
			addCriterion("physical_end is not null");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndEqualTo(Integer value) {
			addCriterion("physical_end =", value, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndNotEqualTo(Integer value) {
			addCriterion("physical_end <>", value, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndGreaterThan(Integer value) {
			addCriterion("physical_end >", value, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndGreaterThanOrEqualTo(Integer value) {
			addCriterion("physical_end >=", value, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndLessThan(Integer value) {
			addCriterion("physical_end <", value, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndLessThanOrEqualTo(Integer value) {
			addCriterion("physical_end <=", value, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndIn(List<Integer> values) {
			addCriterion("physical_end in", values, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndNotIn(List<Integer> values) {
			addCriterion("physical_end not in", values, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndBetween(Integer value1, Integer value2) {
			addCriterion("physical_end between", value1, value2, "physicalEnd");
			return (Criteria) this;
		}

		public Criteria andPhysicalEndNotBetween(Integer value1, Integer value2) {
			addCriterion("physical_end not between", value1, value2,
					"physicalEnd");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthIsNull() {
			addCriterion("estimated_length is null");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthIsNotNull() {
			addCriterion("estimated_length is not null");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthEqualTo(BigDecimal value) {
			addCriterion("estimated_length =", value, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthNotEqualTo(BigDecimal value) {
			addCriterion("estimated_length <>", value, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthGreaterThan(BigDecimal value) {
			addCriterion("estimated_length >", value, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("estimated_length >=", value, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthLessThan(BigDecimal value) {
			addCriterion("estimated_length <", value, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("estimated_length <=", value, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthIn(List<BigDecimal> values) {
			addCriterion("estimated_length in", values, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthNotIn(List<BigDecimal> values) {
			addCriterion("estimated_length not in", values, "estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("estimated_length between", value1, value2,
					"estimatedLength");
			return (Criteria) this;
		}

		public Criteria andEstimatedLengthNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("estimated_length not between", value1, value2,
					"estimatedLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthIsNull() {
			addCriterion("minimum_length is null");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthIsNotNull() {
			addCriterion("minimum_length is not null");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthEqualTo(BigDecimal value) {
			addCriterion("minimum_length =", value, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthNotEqualTo(BigDecimal value) {
			addCriterion("minimum_length <>", value, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthGreaterThan(BigDecimal value) {
			addCriterion("minimum_length >", value, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("minimum_length >=", value, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthLessThan(BigDecimal value) {
			addCriterion("minimum_length <", value, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("minimum_length <=", value, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthIn(List<BigDecimal> values) {
			addCriterion("minimum_length in", values, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthNotIn(List<BigDecimal> values) {
			addCriterion("minimum_length not in", values, "minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("minimum_length between", value1, value2,
					"minimumLength");
			return (Criteria) this;
		}

		public Criteria andMinimumLengthNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("minimum_length not between", value1, value2,
					"minimumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthIsNull() {
			addCriterion("maximum_length is null");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthIsNotNull() {
			addCriterion("maximum_length is not null");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthEqualTo(BigDecimal value) {
			addCriterion("maximum_length =", value, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthNotEqualTo(BigDecimal value) {
			addCriterion("maximum_length <>", value, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthGreaterThan(BigDecimal value) {
			addCriterion("maximum_length >", value, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("maximum_length >=", value, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthLessThan(BigDecimal value) {
			addCriterion("maximum_length <", value, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthLessThanOrEqualTo(BigDecimal value) {
			addCriterion("maximum_length <=", value, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthIn(List<BigDecimal> values) {
			addCriterion("maximum_length in", values, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthNotIn(List<BigDecimal> values) {
			addCriterion("maximum_length not in", values, "maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("maximum_length between", value1, value2,
					"maximumLength");
			return (Criteria) this;
		}

		public Criteria andMaximumLengthNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("maximum_length not between", value1, value2,
					"maximumLength");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("description is null");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("description is not null");
			return (Criteria) this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("description =", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("description <>", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("description >", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("description >=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("description <", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("description <=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("description like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("description not like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("description in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("description not in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("description between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("description not between", value1, value2,
					"description");
			return (Criteria) this;
		}

		public Criteria andRecurrentParentLikeInsensitive(String value) {
			addCriterion("upper(recurrent_parent) like", value.toUpperCase(),
					"recurrentParent");
			return (Criteria) this;
		}

		public Criteria andDonorParentLikeInsensitive(String value) {
			addCriterion("upper(donor_parent) like", value.toUpperCase(),
					"donorParent");
			return (Criteria) this;
		}

		public Criteria andDescriptionLikeInsensitive(String value) {
			addCriterion("upper(description) like", value.toUpperCase(),
					"description");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table segment
	 * @mbggenerated  Mon Jan 12 17:00:04 SGT 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table segment
     *
     * @mbggenerated do_not_delete_during_merge Sun Jun 29 17:39:10 PHT 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}